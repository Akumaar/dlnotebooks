{"paragraphs":[{"text":"%md\nThis notebook builds a simple spam classifier using the XGBoost built-in algorithm in Amazon SageMaker.","user":"anonymous","dateUpdated":"2018-05-07T10:14:12+0000","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20171212-103058_161186422","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:42+0000","dateFinished":"2018-05-07T10:00:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7781"},{"title":"Import Spark classes","text":"import org.apache.spark.{SparkConf, SparkContext}\nimport org.apache.spark.mllib.feature.HashingTF\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.sql.SparkSession\nimport com.amazonaws.services.sagemaker.sparksdk.IAMRole\nimport com.amazonaws.services.sagemaker.sparksdk.algorithms.KMeansSageMakerEstimator","user":"anonymous","dateUpdated":"2018-05-07T10:03:43+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20171103-192637_633852683","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:42+0000","dateFinished":"2018-05-07T10:00:43+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7782"},{"title":"Ingest sentences","text":"// Load 2 types of emails from text files: spam and ham (non-spam).\n// Each line has text from one email.\nval spam = sc.textFile(\"s3://jsimon-public/spam\")\nval ham = sc.textFile(\"s3://jsimon-public/ham\") ","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20171103-192703_618600372","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:42+0000","dateFinished":"2018-05-07T10:00:43+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7783"},{"title":"Map sentences to features","text":"// Create a HashingTF instance to map email text to vectors of features.\nval tf = new HashingTF(numFeatures = 200)\n// Each email is split into words, and each word is mapped to one feature.\nval spamFeatures = spam.map(email => tf.transform(email.split(\" \")))\nval hamFeatures = ham.map(email => tf.transform(email.split(\" \")))\n\n// Display features for a spam sample\nspamFeatures.take(1)\n// Display features for a ham sample\nhamFeatures.take(1)","user":"anonymous","dateUpdated":"2018-05-07T10:14:04+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20171103-193110_69215172","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:43+0000","dateFinished":"2018-05-07T10:00:46+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7784"},{"title":"Label features","text":"// Create LabeledPoint datasets for positive (spam) and negative (ham) examples.\nval positiveExamples = spamFeatures.map(features => LabeledPoint(1, features))\nval negativeExamples = hamFeatures.map(features => LabeledPoint(0, features))\n\n// Display label for a spam sample\npositiveExamples.take(1)\n// Display label for a ham sample\nnegativeExamples.take(1)","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20171103-193056_931431977","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:44+0000","dateFinished":"2018-05-07T10:00:48+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7785"},{"title":"Split data set for training and test","text":"val data = positiveExamples.union(negativeExamples)\ndata.cache()\n// Split the data set 80/20\nval Array(trainingData, testData) = data.randomSplit(Array(0.8, 0.2))\ntrainingData.cache()","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20171103-193130_50274934","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:46+0000","dateFinished":"2018-05-07T10:00:48+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7786"},{"title":"Convert training data to the required format","text":"// SageMaker built-in algos require a DataFrame as input\nval trainingData_df = trainingData.toDF\ntrainingData_df.show(5)\n\n// The XGBoost built-in algo requires libsvm-formatted data\nval trainingData_libsvm = MLUtils.convertVectorColumnsToML(trainingData_df)\ntrainingData_libsvm.show(5)","user":"anonymous","dateUpdated":"2018-05-07T10:01:58+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20180507-084819_415824983","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:48+0000","dateFinished":"2018-05-07T10:00:49+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7787"},{"title":"Configure XGBoost training job","text":"val roleArn = \"arn:aws:iam::ACCOUNT_NUMBER:role/ROLE_NAME\"\n\nval xgboost_estimator = new XGBoostSageMakerEstimator(\n    trainingInstanceType=\"ml.m4.xlarge\", trainingInstanceCount=1,\n    endpointInstanceType=\"ml.m4.xlarge\", endpointInitialInstanceCount=1, \n    sagemakerRole=IAMRole(roleArn))\n\nxgboost_estimator.setObjective(\"multi:softmax\")\nxgboost_estimator.setNumRound(25)\nxgboost_estimator.setNumClasses(2)  // Binary classifier","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20180507-083639_1212267512","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:49+0000","dateFinished":"2018-05-07T10:00:50+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7788"},{"title":"Train model on SageMaker","text":"val xgboost_model = xgboost_estimator.fit(trainingData_libsvm)","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20180507-084421_1148037993","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:50+0000","dateFinished":"2018-05-07T10:00:56+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7789"},{"title":"Convert test data to the required format","text":"// The XGBoost built-in algo requires a libsvm-formatted DataFrame\nval testData_libsvm = MLUtils.convertVectorColumnsToML(testData.toDF)\ntestData_libsvm.show(5)","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836255_-299960189","id":"20180507-090030_630215816","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:50+0000","dateFinished":"2018-05-07T10:00:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7790"},{"title":"Predict test set","text":"val transformedData = xgboost_model.transform(testData_libsvm)\ntransformedData.show(10)","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836256_-314195898","id":"20180507-085948_1671983812","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:56+0000","dateFinished":"2018-05-07T10:00:57+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7791"},{"title":"Measure accuracy of model","text":"val accuracy = 1.0 * transformedData.filter($\"label\"=== $\"prediction\").count / transformedData.count()","user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836256_-314195898","id":"20171103-193159_224907724","dateCreated":"2018-05-07T09:53:56+0000","dateStarted":"2018-05-07T10:00:57+0000","dateFinished":"2018-05-07T10:00:57+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7792"},{"user":"anonymous","dateUpdated":"2018-05-07T10:00:42+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525686836256_-314195898","id":"20171104-160307_946818638","dateCreated":"2018-05-07T09:53:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7793"}],"name":"Spam classifier with SageMaker and XGBoost","id":"2DFNK5PRQ","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}